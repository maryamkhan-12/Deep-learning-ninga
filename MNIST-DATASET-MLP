# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lX2J1KboK2IEAWR5GHZu6KkNb4R9ttoH
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten

(X_train,y_train),(X_test,y_test)= keras.datasets.mnist.load_data()

X_train.shape

import matplotlib.pyplot as plt
plt.imshow(X_train[6])

X_train= X_train/255
y_train= y_train/255

X_train[0]

"""#model creation"""

model = Sequential()
model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

"""#compile my model"""

model.compile(loss='sparse_categorical_crossentropy',optimizer='Adam', metrics=['accuracy'])

"""now train my model

"""

history = model.fit(X_train,y_train,epochs=25,validation_split=0.2)

Y_prob = model.predict(X_test)

y_pred = Y_prob.argmax(axis=1)

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)



plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
